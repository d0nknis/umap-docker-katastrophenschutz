services:
  # traefik: Reverse Proxy für Routing und TLS (optional, kann per Override entfernt werden)
  traefik:
    image: traefik:v2.11
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=mail@example.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
# =============================
# redis Echtzeit Datenbank
# =============================
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command: ["redis-server"]
# =============================
# Datenbank
# =============================
  db:
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
    image: postgis/postgis:16-master
#    image: kartoza/postgis:16-3.4
    command: ["postgres",
      "-c","max_connections=300",
      "-c","shared_buffers=512MB"
    ]
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./db:/var/lib/postgresql/data
# =============================
# uMap Anwendung
# =============================
  app:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    image: umap/umap:3.3.6
    environment:
      - UMAP_CUSTOM_STATICS=/srv/umap/static
      - MEDIA_ROOT=/srv/umap/uploads
      - UMAP_CUSTOM_TEMPLATES=/srv/umap/templates_custom

      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgis://postgres@db/postgres?conn_max_age=60&conn_health_checks=true

      - SECRET_KEY=${SECRET_KEY}
      - OPENROUTESERVICE_APIKEY=${OPENROUTESERVICE_APIKEY}

      - SITE_URL=${SITE_URL}
      - CSRF_TRUSTED_ORIGINS=${SITE_URL}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}

      - UMAP_ALLOW_ANONYMOUS=${UMAP_ALLOW_ANONYMOUS}
      - DEBUG=${DEBUG}
      - REALTIME_ENABLED=$1
      - ENABLE_ACCOUNT_LOGIN=1

    volumes:
      - ./userdata:/srv/umap/uploads
      - ./template_custom:/srv/umap/templates_custom
      - ./kats/:/srv/umap/kats
      - ./config/umap.conf:/etc/umap/umap.conf
    labels:
      - traefik.enable=true
      - "traefik.http.routers.umap.rule=Host(${TRAEFIK_HOST}) && !PathPrefix(`/static`) && !PathPrefix(`/uploads`) && !PathPrefix(`/tiles`) && !PathPrefix(`/service`)"
      - traefik.http.routers.umap.entrypoints=websecure
      - traefik.http.routers.umap.tls.certresolver=letsencrypt
      - traefik.http.routers.umap.service=umap
      - traefik.http.services.umap.loadbalancer.server.port=8000
# =============================
# nginx Static Files
# =============================
  nginx_static:
    image: nginx:alpine
    volumes:
      - ./static:/srv/static_core:ro
      - ./static_custom:/srv/static_custom:ro
      - ./config/nginx-static.conf:/etc/nginx/conf.d/default.conf
      - ./log:/var/log/nginx/
      - ./userdata:/srv/uploads:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.umap-static.rule=Host(`${TRAEFIK_HOST}`) && (PathPrefix(`/static`) || PathPrefix(`/uploads`))
      - traefik.http.routers.umap-static.entrypoints=websecure
      - traefik.http.routers.umap-static.tls.certresolver=letsencrypt
      - traefik.http.routers.umap-static.service=umap-static
      - traefik.http.services.umap-static.loadbalancer.server.port=80
# =============================
# title Proxy für Offline erreichbarkeit von Kartenkacheln
# =============================
  mapproxy:
    image: ghcr.io/mapproxy/mapproxy/mapproxy:5.0.0-nginx
    volumes:
      - ./config/mapproxy.yaml:/mapproxy/mapproxy.yaml
      - ./config/mapproxy-seed.yaml:/mapproxy/seed.yaml:ro
      - ./mapproxy:/var/cache/mapproxy
    command: >
      /bin/sh -c "
        mkdir -p /var/cache/mapproxy &&
        mapproxy-util serve-develop /mapproxy/mapproxy.yaml -b 0.0.0.0:8080
      "
    labels:
      - traefik.enable=true
      - traefik.http.routers.umap-mapproxy.rule=Host(`${TRAEFIK_HOST}`) && (PathPrefix(`/tiles`) || PathPrefix(`/service`))
      - traefik.http.routers.umap-mapproxy.entrypoints=websecure
      - traefik.http.routers.umap-mapproxy.tls.certresolver=letsencrypt
      - traefik.http.routers.umap-mapproxy.service=umap-mapproxy
      - traefik.http.services.umap-mapproxy.loadbalancer.server.port=8080
