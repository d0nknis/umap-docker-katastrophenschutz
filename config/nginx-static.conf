server {
  listen 80 default_server;
  error_log  /var/log/nginx/error.log;
  access_log /var/log/nginx/access.log;
  # 1) Piktogramme & eigene Statics mit sehr langem Cache
  #    (wir legen sie unter /static_custom ab und hängen sie unter /static/ ein)
  location ^~ /static/pictograms/ {
    alias /srv/static_core/pictograms/;
    access_log off;
    # 1 Jahr + immutable -> Browser/Proxies cachen hart, entlastet den Server extrem
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    # Kompression für SVG/JSON
    gzip on;
    gzip_types image/svg+xml application/json text/plain;
    try_files $uri =404;
  }

  # 2) Restliche eigenen Statics (falls vorhanden)
  location ^~ /static_custom/ {
    alias /srv/static_custom/;
    access_log off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800";
    gzip on;
    gzip_types image/svg+xml text/css application/javascript;
    try_files $uri =404;
  }

  # 3) Core-Staticfiles von uMap/Django (aus collectstatic)
  location ^~ /static/ {
    alias /srv/static_core/;
    access_log off;
    expires 7d;
    add_header Cache-Control "public, max-age=604800";
    gzip on;
    gzip_types text/css application/javascript image/svg+xml;
    try_files $uri =404;
  }

  # 4) Uploads (optional, wenn du die auch statisch ausliefern willst)
  location ^~ /uploads/ {
    alias /srv/uploads/;
    access_log off;
    expires 1h;
    add_header Cache-Control "public, max-age=3600";
    try_files $uri =404;
  }

  # Performance-Tuning
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;
  open_file_cache max=10000 inactive=60s;
  open_file_cache_valid 120s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # Security-Header (leichtgewichtig)
  add_header X-Content-Type-Options nosniff always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;
}
